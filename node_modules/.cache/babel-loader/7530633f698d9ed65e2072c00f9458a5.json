{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/location.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { LocationFrame } from './locationFrame';\nimport { database } from './mockBackend/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Location(props) {\n  _s();\n\n  const [location, setLocation] = useState({\n    id: '0',\n    name: 'Placeholder',\n    date: '01.02',\n    weather: 'sun',\n    temp: '18',\n    wind: '0'\n  });\n  const datasource = database;\n\n  const searchDatabase = datasource => {\n    const locationData = datasource.filter(dataLocation => {\n      return dataLocation.name === location.name;\n    });\n\n    if (locationData !== null) {\n      setLocation([{\n        id: props.generateId(),\n        name: locationData.name,\n        date: locationData.date,\n        weather: locationData.weather,\n        temp: locationData.temp,\n        wind: locationData.wind\n      }]);\n    } else {\n      alert('There exists no location with that name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Location, \"QJaboqyD73KYufJCPoNIh7EXQQE=\");\n\n_c = Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/location.js"],"names":["React","useState","LocationFrame","database","Location","props","location","setLocation","id","name","date","weather","temp","wind","datasource","searchDatabase","locationData","filter","dataLocation","generateId","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAE5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACrCO,IAAAA,EAAE,EAAE,GADiC;AAErCC,IAAAA,IAAI,EAAE,aAF+B;AAGrCC,IAAAA,IAAI,EAAE,OAH+B;AAIrCC,IAAAA,OAAO,EAAE,KAJ4B;AAKrCC,IAAAA,IAAI,EAAE,IAL+B;AAMrCC,IAAAA,IAAI,EAAE;AAN+B,GAAD,CAAxC;AASA,QAAMC,UAAU,GAAGX,QAAnB;;AAEA,QAAMY,cAAc,GAAID,UAAD,IAAgB;AAEnC,UAAME,YAAY,GAAGF,UAAU,CAACG,MAAX,CAAmBC,YAAD,IAAkB;AACrD,aAAOA,YAAY,CAACT,IAAb,KAAsBH,QAAQ,CAACG,IAAtC;AACH,KAFoB,CAArB;;AAIA,QAAIO,YAAY,KAAK,IAArB,EAA2B;AACvBT,MAAAA,WAAW,CAAC,CAAC;AACTC,QAAAA,EAAE,EAAEH,KAAK,CAACc,UAAN,EADK;AAETV,QAAAA,IAAI,EAAEO,YAAY,CAACP,IAFV;AAGTC,QAAAA,IAAI,EAAEM,YAAY,CAACN,IAHV;AAITC,QAAAA,OAAO,EAAEK,YAAY,CAACL,OAJb;AAKTC,QAAAA,IAAI,EAAEI,YAAY,CAACJ,IALV;AAMTC,QAAAA,IAAI,EAAEG,YAAY,CAACH;AANV,OAAD,CAAD,CAAX;AAQH,KATD,MASO;AACHO,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH;AACJ,GAlBD;;AAoBA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GArCehB,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\nimport { LocationFrame } from './locationFrame';\nimport { database } from './mockBackend/database';\n\nexport function Location(props) {\n\n    const [location, setLocation] = useState({\n        id: '0',\n        name: 'Placeholder',\n        date: '01.02',\n        weather: 'sun',\n        temp: '18',\n        wind: '0'\n    })\n\n    const datasource = database;\n\n    const searchDatabase = (datasource) => {\n\n        const locationData = datasource.filter((dataLocation) => {\n            return dataLocation.name === location.name;\n        })\n\n        if (locationData !== null) {\n            setLocation([{\n                id: props.generateId(),\n                name: locationData.name,\n                date: locationData.date,\n                weather: locationData.weather,\n                temp: locationData.temp,\n                wind: locationData.wind\n            }])\n        } else {\n            alert('There exists no location with that name.');\n        }\n    }\n\n    return (\n        <div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}