{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport { database } from './mockBackend/database';\nimport '..App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const datasource = database; //Metod used to change the text state to the live input from the user\n\n  const handleInputChange = event => {\n    setText(event.target.value);\n  }; //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n  //Bruk props.checkIfPresent funksjon fra locationManager\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (text.length > 0) {\n      const locationToAdd = datasource.find(locations => locations.name === text);\n      const location = {\n        id: props.generateId(),\n        name: text,\n        date: locationToAdd.date,\n        weather: locationToAdd.weather,\n        temp: locationToAdd.temp,\n        wind: locationToAdd.wind\n      };\n      props.addLocation(location);\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: handleInputChange,\n      placeholder: \"Enter a location...\",\n      className: \"App-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","AddLocationForm","props","text","setText","datasource","handleInputChange","event","target","value","handleSubmit","preventDefault","length","locationToAdd","find","locations","name","location","id","generateId","date","weather","temp","wind","addLocation"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAO,WAAP;;AAEA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMM,UAAU,GAAGL,QAAnB,CAHoC,CAKpC;;AACA,QAAMM,iBAAiB,GAAIC,KAAD,IAAW;AACjCH,IAAAA,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD,CANoC,CAWpC;AACA;;;AACA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAGR,IAAI,CAACS,MAAL,GAAc,CAAjB,EAAoB;AAEhB,YAAMC,aAAa,GAAGR,UAAU,CAACS,IAAX,CAAgBC,SAAS,IAAIA,SAAS,CAACC,IAAV,KAAmBb,IAAhD,CAAtB;AAEA,YAAMc,QAAQ,GAAG;AACbC,QAAAA,EAAE,EAAEhB,KAAK,CAACiB,UAAN,EADS;AAEbH,QAAAA,IAAI,EAAEb,IAFO;AAGbiB,QAAAA,IAAI,EAAEP,aAAa,CAACO,IAHP;AAIbC,QAAAA,OAAO,EAAER,aAAa,CAACQ,OAJV;AAKbC,QAAAA,IAAI,EAAET,aAAa,CAACS,IALP;AAMbC,QAAAA,IAAI,EAAEV,aAAa,CAACU;AANP,OAAjB;AASArB,MAAAA,KAAK,CAACsB,WAAN,CAAkBP,QAAlB;AACAb,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAnBD;;AAqBA,sBACI;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,MAAb;AACQ,MAAA,KAAK,EAAEP,IADf;AAEQ,MAAA,QAAQ,EAAEG,iBAFlB;AAGQ,MAAA,WAAW,EAAC,qBAHpB;AAIQ,MAAA,SAAS,EAAC;AAJlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5CeL,e;;KAAAA,e","sourcesContent":["//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport { database } from './mockBackend/database';\nimport '..App.css';\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n    const datasource = database;\n\n    //Metod used to change the text state to the live input from the user\n    const handleInputChange = (event) => {\n        setText(event.target.value);\n    }\n\n\n    //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n    //Bruk props.checkIfPresent funksjon fra locationManager\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        if(text.length > 0) {\n\n            const locationToAdd = datasource.find(locations => locations.name === text)\n\n            const location = {\n                id: props.generateId(),\n                name: text,\n                date: locationToAdd.date,\n                weather: locationToAdd.weather,\n                temp: locationToAdd.temp,\n                wind: locationToAdd.wind\n            }\n\n            props.addLocation(location);\n            setText('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input  type='text' \n                    value={text} \n                    onChange={handleInputChange} \n                    placeholder='Enter a location...' \n                    className='App-input'/>\n            <input type=\"submit\" value=\"Add\" />\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}