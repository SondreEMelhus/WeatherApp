{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/autocomplete.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutoComplete = _ref => {\n  _s();\n\n  let {\n    locations\n  } = _ref;\n  const [filteredLocations, setFilteredLocations] = useState([]);\n  const [activeLocationIndex, setActiveLocationIndex] = useState(0);\n  const [showLocations, setShowLocations] = useState(false);\n  const [input, setInput] = useState(''); //Used to handle a change in the input field\n\n  const onChange = event => {\n    const userInput = event.target.value; //Filter out the locations that doesnt contain the users input\n\n    const unLinked = locations.filter(location => location.toLoweCase().indexOf(userInput.toLoweCase()) > -1);\n    setInput(event.target.value);\n    setFilteredLocations(unLinked);\n    setActiveLocationIndex(0);\n    setShowLocations(true);\n  };\n\n  const onClick = event => {\n    setFilteredLocations([]);\n    setInput(event.target.innerText);\n    setActiveLocationIndex(0);\n    setShowLocations(false);\n  };\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      onClick();\n    }\n\n    if (event.keyCode === 38) {\n      if (activeLocationIndex === 0) {\n        setInput('');\n      } else {\n        setActiveLocationIndex(prev => {\n          return prev - 1;\n        });\n      }\n    }\n\n    if (event.keyCode === 40) {\n      if (activeLocationIndex === filteredLocations.length) {\n        return null;\n      } else {\n        setActiveLocationIndex(prev => {\n          return prev + 1;\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AutoComplete, \"Gb51DyN6i+DWZyfLtIkjw000Syg=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/autocomplete.js"],"names":["React","useState","AutoComplete","locations","filteredLocations","setFilteredLocations","activeLocationIndex","setActiveLocationIndex","showLocations","setShowLocations","input","setInput","onChange","event","userInput","target","value","unLinked","filter","location","toLoweCase","indexOf","onClick","innerText","onKeyDown","keyCode","prev","length"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,YAAY,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAEpC,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CALoC,CAOpC;;AACA,QAAMW,QAAQ,GAAIC,KAAD,IAAY;AACzB,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B,CADyB,CAGzB;;AACA,UAAMC,QAAQ,GAAGd,SAAS,CAACe,MAAV,CACZC,QAAD,IACIA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA8BP,SAAS,CAACM,UAAV,EAA9B,IAAwD,CAAC,CAFhD,CAAjB;AAKAT,IAAAA,QAAQ,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAX,IAAAA,oBAAoB,CAACY,QAAD,CAApB;AACAV,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAbD;;AAeA,QAAMa,OAAO,GAAIT,KAAD,IAAW;AACvBR,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAM,IAAAA,QAAQ,CAACE,KAAK,CAACE,MAAN,CAAaQ,SAAd,CAAR;AACAhB,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GALD;;AAOA,QAAMe,SAAS,GAAIX,KAAD,IAAW;AAEzB,QAAIA,KAAK,CAACY,OAAN,KAAkB,EAAtB,EAA0B;AACtBH,MAAAA,OAAO;AACV;;AACD,QAAIT,KAAK,CAACY,OAAN,KAAkB,EAAtB,EAA0B;AAEtB,UAAInB,mBAAmB,KAAK,CAA5B,EAA+B;AAC3BK,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAFD,MAEO;AACHJ,QAAAA,sBAAsB,CAAEmB,IAAD,IAAU;AAC7B,iBAAOA,IAAI,GAAG,CAAd;AACH,SAFqB,CAAtB;AAGH;AACJ;;AACD,QAAIb,KAAK,CAACY,OAAN,KAAkB,EAAtB,EAA0B;AAEtB,UAAInB,mBAAmB,KAAKF,iBAAiB,CAACuB,MAA9C,EAAsD;AAClD,eAAO,IAAP;AACH,OAFD,MAEO;AACHpB,QAAAA,sBAAsB,CAAEmB,IAAD,IAAU;AAC7B,iBAAOA,IAAI,GAAG,CAAd;AACH,SAFqB,CAAtB;AAGH;AACJ;AACJ,GAzBD;;AA2BA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9DD;;GAAMxB,Y;;KAAAA,Y","sourcesContent":["//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, {useState} from 'react';\n\nconst AutoComplete = ({ locations }) => {\n\n    const [filteredLocations, setFilteredLocations] = useState([]);\n    const [activeLocationIndex, setActiveLocationIndex] = useState(0);\n    const [showLocations, setShowLocations] = useState(false);\n    const [input, setInput] = useState('');\n\n    //Used to handle a change in the input field\n    const onChange = (event) =>  {\n        const userInput = event.target.value;\n\n        //Filter out the locations that doesnt contain the users input\n        const unLinked = locations.filter(\n            (location) => \n                location.toLoweCase().indexOf(userInput.toLoweCase()) > -1\n        );\n\n        setInput(event.target.value);\n        setFilteredLocations(unLinked);\n        setActiveLocationIndex(0);\n        setShowLocations(true);\n    };\n\n    const onClick = (event) => {\n        setFilteredLocations([]);\n        setInput(event.target.innerText);\n        setActiveLocationIndex(0);\n        setShowLocations(false);\n    }\n\n    const onKeyDown = (event) => {\n\n        if (event.keyCode === 13) {\n            onClick();\n        }\n        if (event.keyCode === 38) {\n\n            if (activeLocationIndex === 0) {\n                setInput('');\n            } else {\n                setActiveLocationIndex((prev) => {\n                    return prev - 1;\n                })\n            }\n        }\n        if (event.keyCode === 40) {\n            \n            if (activeLocationIndex === filteredLocations.length) {\n                return null;\n            } else {\n                setActiveLocationIndex((prev) => {\n                    return prev + 1;\n                });\n            }\n        }\n    }\n\n    return (\n        <div>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}