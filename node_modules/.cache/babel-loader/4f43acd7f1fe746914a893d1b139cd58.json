{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport { database } from './mockBackend/database';\nimport '../App.css';\nimport { SearchBar } from './Searchbar/searchbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const data = database; //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n  //Bruk props.checkIfPresent funksjon fra locationManager\n\n  const handleSubmit = event => {\n    if (text.length > 0) {\n      if (props.checkIfPresent(text)) {\n        const locationToAdd = data.find(locations => locations.name === text);\n        const location = {\n          id: props.generateId(),\n          name: text,\n          date: locationToAdd.date,\n          weather: locationToAdd.weather,\n          temp: locationToAdd.temp,\n          wind: locationToAdd.wind\n        };\n        props.addLocation(location);\n        setText('');\n      } else {\n        setText('');\n        setErrorMessage('This location has already been added. Please enter another location name.');\n      }\n    } else {\n      setText('');\n      setErrorMessage('Please enter a valid location name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"inputClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      style: {\n        paddingBottom: 10\n      },\n      children: \"Enter the name of location to see its weather forecast.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setText: setText,\n      handleSubmit: handleSubmit,\n      setErrorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"2lqRiuP/DvbY98q1g/Lx7DKh1aI=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","SearchBar","AddLocationForm","props","text","setText","errorMessage","setErrorMessage","data","handleSubmit","event","length","checkIfPresent","locationToAdd","find","locations","name","location","id","generateId","date","weather","temp","wind","addLocation","paddingBottom"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAEA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMS,IAAI,GAAGR,QAAb,CALoC,CAOpC;AACA;;AACA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAGN,IAAI,CAACO,MAAL,GAAc,CAAjB,EAAoB;AAChB,UAAIR,KAAK,CAACS,cAAN,CAAqBR,IAArB,CAAJ,EAAgC;AAC5B,cAAMS,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAUC,SAAS,IAAIA,SAAS,CAACC,IAAV,KAAmBZ,IAA1C,CAAtB;AAEA,cAAMa,QAAQ,GAAG;AACbC,UAAAA,EAAE,EAAEf,KAAK,CAACgB,UAAN,EADS;AAEbH,UAAAA,IAAI,EAAEZ,IAFO;AAGbgB,UAAAA,IAAI,EAAEP,aAAa,CAACO,IAHP;AAIbC,UAAAA,OAAO,EAAER,aAAa,CAACQ,OAJV;AAKbC,UAAAA,IAAI,EAAET,aAAa,CAACS,IALP;AAMbC,UAAAA,IAAI,EAAEV,aAAa,CAACU;AANP,SAAjB;AASApB,QAAAA,KAAK,CAACqB,WAAN,CAAkBP,QAAlB;AACAZ,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH,OAdD,MAcO;AACHA,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,eAAe,CAAC,2EAAD,CAAf;AACH;AAEJ,KApBD,MAoBO;AACHF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,eAAe,CAAC,qCAAD,CAAf;AACH;AACJ,GA1BD;;AA4BA,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAA8B,IAAA,SAAS,EAAC,YAAxC;AAAA,4BACI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,KAAK,EAAE;AAACgB,QAAAA,aAAa,EAAE;AAAhB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEpB,OAApB;AAA6B,MAAA,YAAY,EAAEI,YAA3C;AAAyD,MAAA,eAAe,EAAEF;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA,gBAAyCD;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5CeJ,e;;KAAAA,e","sourcesContent":["//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport { database } from './mockBackend/database';\nimport '../App.css';\nimport { SearchBar } from './Searchbar/searchbar';\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const data = database;\n\n    //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n    //Bruk props.checkIfPresent funksjon fra locationManager\n    const handleSubmit = (event) => {\n        \n        if(text.length > 0) {\n            if (props.checkIfPresent(text)) {\n                const locationToAdd = data.find(locations => locations.name === text)\n\n                const location = {\n                    id: props.generateId(),\n                    name: text,\n                    date: locationToAdd.date,\n                    weather: locationToAdd.weather,\n                    temp: locationToAdd.temp,\n                    wind: locationToAdd.wind\n                }\n\n                props.addLocation(location);\n                setText('');\n            } else {\n                setText('');\n                setErrorMessage('This location has already been added. Please enter another location name.')\n            }\n\n        } else {\n            setText('');\n            setErrorMessage('Please enter a valid location name.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className='inputClass'>\n            <p type='text' style={{paddingBottom: 10}}>Enter the name of location to see its weather forecast.</p>\n            <SearchBar setText={setText} handleSubmit={handleSubmit} setErrorMessage={setErrorMessage}/>\n            <p type='text' className='errorMessage'>{errorMessage}</p>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}