{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/locationManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport weatherLogo from './resources/WeatherIcons/logo.png';\nimport { Arrow } from './arrow/arrow';\nimport '../App.css';\nimport { SearchForLocation } from './searchForLocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LocationManager() {\n  _s();\n\n  const [locations, setLocations] = useState([{\n    location: [{}]\n  }]);\n  let idCounter = 0;\n\n  const generateId = () => {\n    return idCounter = idCounter + 1;\n  };\n\n  const createLocation = location => {\n    const newLocation = {\n      id: generateId(),\n      name: location.name,\n      date: '01.01',\n      weather: 'sun',\n      temp: '10',\n      wind: '0'\n    };\n  };\n\n  const addLocation = locationToAdd => {\n    setLocations(location => {\n      return [...location, locationToAdd];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: weatherLogo,\n        alt: \"logo\",\n        className: \"App-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"Forecaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Arrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchForLocation, {\n      createLocation: createLocation,\n      addLocation: addLocation,\n      generateId: generateId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LocationManager, \"SZ5GkSnV9FSgkVrBrt8IkapjWYw=\");\n\n_c = LocationManager;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationManager\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/locationManager.js"],"names":["React","useState","useEffect","weatherLogo","Arrow","SearchForLocation","LocationManager","locations","setLocations","location","idCounter","generateId","createLocation","newLocation","id","name","date","weather","temp","wind","addLocation","locationToAdd"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,YAAP;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAC;AACxCQ,IAAAA,QAAQ,EAAE,CAAC,EAAD;AAD8B,GAAD,CAAD,CAA1C;AAIA,MAAIC,SAAS,GAAG,CAAhB;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB,WAAOD,SAAS,GAAGA,SAAS,GAAG,CAA/B;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIH,QAAD,IAAc;AACjC,UAAMI,WAAW,GAAG;AAChBC,MAAAA,EAAE,EAAEH,UAAU,EADE;AAEhBI,MAAAA,IAAI,EAAEN,QAAQ,CAACM,IAFC;AAGhBC,MAAAA,IAAI,EAAE,OAHU;AAIhBC,MAAAA,OAAO,EAAE,KAJO;AAKhBC,MAAAA,IAAI,EAAE,IALU;AAMhBC,MAAAA,IAAI,EAAE;AANU,KAApB;AAQH,GATD;;AAWA,QAAMC,WAAW,GAAIC,aAAD,IAAmB;AACnCb,IAAAA,YAAY,CAAEC,QAAD,IAAc;AACvB,aAAO,CAAC,GAAGA,QAAJ,EAAcY,aAAd,CAAP;AACH,KAFW,CAAZ;AAGH,GAJD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAElB,WAAV;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAkC,QAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,iBAAD;AAAmB,MAAA,cAAc,EAAES,cAAnC;AAAmD,MAAA,WAAW,EAAEQ,WAAhE;AAA6E,MAAA,UAAU,EAAET;AAAzF;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAzCeL,e;;KAAAA,e;AAyCf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport weatherLogo from './resources/WeatherIcons/logo.png';\nimport { Arrow } from './arrow/arrow';\nimport '../App.css';\nimport { SearchForLocation } from './searchForLocation';\n\nexport function LocationManager() {\n\n    const [locations, setLocations] = useState([{\n        location: [{}]\n    }])\n\n    let idCounter = 0;\n    const generateId = () => {\n        return idCounter = idCounter + 1;\n    }\n\n    const createLocation = (location) => {\n        const newLocation = {\n            id: generateId(),\n            name: location.name,\n            date: '01.01',\n            weather: 'sun',\n            temp: '10',\n            wind: '0'\n        };\n    }\n\n    const addLocation = (locationToAdd) => {\n        setLocations((location) => {\n            return [...location, locationToAdd];\n        })\n    }\n\n\n    return (\n        <div className='App'>\n            <div className='App-header'>\n                <img src={weatherLogo} alt=\"logo\" className='App-logo' />\n                <br/>\n                <h1 className='App-title'>Forecaster</h1>\n                <br/>\n            </div>\n            <Arrow />\n            <SearchForLocation createLocation={createLocation} addLocation={addLocation} generateId={generateId}/>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}