{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { database } from './mockBackend/database';\nimport { Searchbar } from './searchbar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const data = database;\n\n  const presentInDatabase = locationName => {\n    const present = data.find(location => location.name === locationName);\n    return present;\n  }; //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n  //Bruk props.checkIfPresent funksjon fra locationManager\n\n\n  const handleSubmit = event => {\n    if (text.length > 0) {\n      if (presentInDatabase(text)) {\n        if (!props.checkIfPresent(text)) {\n          const locationToAdd = data.find(locations => locations.name === text);\n          const location = {\n            id: props.generateId(),\n            name: text,\n            date: locationToAdd.date,\n            weather: locationToAdd.weather,\n            temp: locationToAdd.temp,\n            wind: locationToAdd.wind\n          };\n          props.addLocation(location);\n          setText('');\n        } else {\n          setText('');\n          setErrorMessage('This location has already been added. Please try another location.');\n        }\n      } else {\n        setText('');\n        setErrorMessage('The provided dataset does not contain this location. Please try another location.');\n      }\n    } else {\n      setText('');\n      setErrorMessage('Please enter a valid location name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"inputClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      style: {\n        paddingBottom: 10\n      },\n      children: \"Enter the name of location to see its weather forecast.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      handleSubmit: handleSubmit,\n      setText: setText,\n      setErrorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"2lqRiuP/DvbY98q1g/Lx7DKh1aI=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","Searchbar","AddLocationForm","props","text","setText","errorMessage","setErrorMessage","data","presentInDatabase","locationName","present","find","location","name","handleSubmit","event","length","checkIfPresent","locationToAdd","locations","id","generateId","date","weather","temp","wind","addLocation","paddingBottom"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAGA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMS,IAAI,GAAGR,QAAb;;AAEA,QAAMS,iBAAiB,GAAIC,YAAD,IAAkB;AACxC,UAAMC,OAAO,GAAGH,IAAI,CAACI,IAAL,CAAUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkBJ,YAAxC,CAAhB;AACA,WAAOC,OAAP;AACH,GAHD,CAPoC,CAYpC;AACA;;;AACA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAGZ,IAAI,CAACa,MAAL,GAAc,CAAjB,EAAoB;AAChB,UAAIR,iBAAiB,CAACL,IAAD,CAArB,EAA6B;AACzB,YAAI,CAACD,KAAK,CAACe,cAAN,CAAqBd,IAArB,CAAL,EAAiC;AAC7B,gBAAMe,aAAa,GAAGX,IAAI,CAACI,IAAL,CAAUQ,SAAS,IAAIA,SAAS,CAACN,IAAV,KAAmBV,IAA1C,CAAtB;AAEA,gBAAMS,QAAQ,GAAG;AACbQ,YAAAA,EAAE,EAAElB,KAAK,CAACmB,UAAN,EADS;AAEbR,YAAAA,IAAI,EAAEV,IAFO;AAGbmB,YAAAA,IAAI,EAAEJ,aAAa,CAACI,IAHP;AAIbC,YAAAA,OAAO,EAAEL,aAAa,CAACK,OAJV;AAKbC,YAAAA,IAAI,EAAEN,aAAa,CAACM,IALP;AAMbC,YAAAA,IAAI,EAAEP,aAAa,CAACO;AANP,WAAjB;AASAvB,UAAAA,KAAK,CAACwB,WAAN,CAAkBd,QAAlB;AACAR,UAAAA,OAAO,CAAC,EAAD,CAAP;AACH,SAdD,MAcO;AACHA,UAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,UAAAA,eAAe,CAAC,oEAAD,CAAf;AACH;AACJ,OAnBD,MAmBO;AACHF,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,eAAe,CAAC,mFAAD,CAAf;AACH;AAEJ,KAzBD,MAyBO;AACHF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,eAAe,CAAC,qCAAD,CAAf;AACH;AACJ,GA/BD;;AAiCA,sBACI;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAA8B,IAAA,SAAS,EAAC,YAAxC;AAAA,4BACI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,KAAK,EAAE;AAACa,QAAAA,aAAa,EAAE;AAAhB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAY,MAAA,YAAY,EAAEb,YAA1B;AACY,MAAA,OAAO,EAAEV,OADrB;AAEY,MAAA,eAAe,EAAEE;AAF7B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA,gBAAyCD;AAAzC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxDeJ,e;;KAAAA,e","sourcesContent":["//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport '../App.css';\n\nimport { database } from './mockBackend/database';\nimport { Searchbar } from './searchbar.js';\n\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const data = database;\n\n    const presentInDatabase = (locationName) => {\n        const present = data.find(location => location.name === locationName)\n        return present;\n    }\n\n    //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n    //Bruk props.checkIfPresent funksjon fra locationManager\n    const handleSubmit = (event) => {\n        \n        if(text.length > 0) {\n            if (presentInDatabase(text)) {\n                if (!props.checkIfPresent(text)) {\n                    const locationToAdd = data.find(locations => locations.name === text)\n\n                    const location = {\n                        id: props.generateId(),\n                        name: text,\n                        date: locationToAdd.date,\n                        weather: locationToAdd.weather,\n                        temp: locationToAdd.temp,\n                        wind: locationToAdd.wind\n                    }\n\n                    props.addLocation(location);\n                    setText('');\n                } else {\n                    setText('');\n                    setErrorMessage('This location has already been added. Please try another location.')\n                }\n            } else {\n                setText('');\n                setErrorMessage('The provided dataset does not contain this location. Please try another location.')\n            }\n\n        } else {\n            setText('');\n            setErrorMessage('Please enter a valid location name.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className='inputClass'>\n            <p type='text' style={{paddingBottom: 10}}>Enter the name of location to see its weather forecast.</p>\n            <Searchbar  handleSubmit={handleSubmit} \n                        setText={setText} \n                        setErrorMessage={setErrorMessage}/>\n            <p type='text' className='errorMessage'>{errorMessage}</p>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}