{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport { database } from './mockBackend/database';\nimport Trie from './Searchbar/trie';\nimport '../App.css';\nimport { SearchBar } from './Searchbar/searchbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dictionary = {\n  words: ['hello', 'helium', 'world', 'car', 'carpet', 'test', 'this', 'that', 'those', 'working', 'is']\n};\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const data = database;\n  const listOfLocations = data.map(locations => locations.name); //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n  //Bruk props.checkIfPresent funksjon fra locationManager\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (text.length > 0) {\n      const locationToAdd = data.find(locations => locations.name === text);\n      const location = {\n        id: props.generateId(),\n        name: text,\n        date: locationToAdd.date,\n        weather: locationToAdd.weather,\n        temp: locationToAdd.temp,\n        wind: locationToAdd.wind\n      };\n      props.addLocation(location);\n      setText('');\n    } else {\n      setText('');\n      setErrorMessage('Please enter a valid location name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    class: \"inputClass\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      setText: setText,\n      listOfLocations: listOfLocations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      hidden: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      class: \"App-error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","Trie","SearchBar","dictionary","words","AddLocationForm","props","text","setText","data","listOfLocations","map","locations","name","handleSubmit","event","preventDefault","length","locationToAdd","find","location","id","generateId","date","weather","temp","wind","addLocation","setErrorMessage","errorMessage"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,CAAC,OAAD,EAAS,QAAT,EAAkB,OAAlB,EAA0B,KAA1B,EAAgC,QAAhC,EAAyC,MAAzC,EAAgD,MAAhD,EAAuD,MAAvD,EAA8D,OAA9D,EAAsE,SAAtE,EAAgF,IAAhF;AADQ,CAAnB;AAIA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,IAAI,GAAGT,QAAb;AAEA,QAAMU,eAAe,GAAGD,IAAI,CAACE,GAAL,CAASC,SAAS,IAAIA,SAAS,CAACC,IAAhC,CAAxB,CANoC,CAQpC;AACA;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGT,IAAI,CAACU,MAAL,GAAc,CAAjB,EAAoB;AAChB,YAAMC,aAAa,GAAGT,IAAI,CAACU,IAAL,CAAUP,SAAS,IAAIA,SAAS,CAACC,IAAV,KAAmBN,IAA1C,CAAtB;AAEI,YAAMa,QAAQ,GAAG;AACbC,QAAAA,EAAE,EAAEf,KAAK,CAACgB,UAAN,EADS;AAEbT,QAAAA,IAAI,EAAEN,IAFO;AAGbgB,QAAAA,IAAI,EAAEL,aAAa,CAACK,IAHP;AAIbC,QAAAA,OAAO,EAAEN,aAAa,CAACM,OAJV;AAKbC,QAAAA,IAAI,EAAEP,aAAa,CAACO,IALP;AAMbC,QAAAA,IAAI,EAAER,aAAa,CAACQ;AANP,OAAjB;AASApB,MAAAA,KAAK,CAACqB,WAAN,CAAkBP,QAAlB;AACAZ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACP,KAdD,MAcO;AACHA,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAoB,MAAAA,eAAe,CAAC,qCAAD,CAAf;AACH;AACJ,GArBD;;AAuBA,sBACI;AAAM,IAAA,QAAQ,EAAEd,YAAhB;AAA8B,IAAA,KAAK,EAAC,YAApC;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEN,OAApB;AAA6B,MAAA,eAAe,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,KAAK,EAAC,WAArB;AAAA,gBAAkCmB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAxCexB,e;;KAAAA,e","sourcesContent":["//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport { database } from './mockBackend/database';\nimport Trie from './Searchbar/trie'\nimport '../App.css';\nimport { SearchBar } from './Searchbar/searchbar';\n\nconst dictionary = {\n    words: ['hello','helium','world','car','carpet','test','this','that','those','working','is']\n  }\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n\n    const data = database;\n    \n    const listOfLocations = data.map(locations => locations.name);\n\n    //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n    //Bruk props.checkIfPresent funksjon fra locationManager\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        if(text.length > 0) {\n            const locationToAdd = data.find(locations => locations.name === text)\n\n                const location = {\n                    id: props.generateId(),\n                    name: text,\n                    date: locationToAdd.date,\n                    weather: locationToAdd.weather,\n                    temp: locationToAdd.temp,\n                    wind: locationToAdd.wind\n                }\n\n                props.addLocation(location);\n                setText('');\n        } else {\n            setText('');\n            setErrorMessage('Please enter a valid location name.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} class='inputClass'>\n            <SearchBar setText={setText} listOfLocations={listOfLocations}/>\n            <input type='submit' hidden='true' />\n            <p type='text' class='App-error'>{errorMessage}</p>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}