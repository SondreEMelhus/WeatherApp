{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/Searchbar/searchbar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Trie from \"./trie.js\";\nimport { AddLocationForm } from \"../addLocationForm.js\";\nimport { database, presentInDatabase } from '../mockBackend/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchBar(props) {\n  _s();\n\n  const [prefix, setPrefix] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\"); // const getWords = async() => {\n  //   const url = 'https://raw.githubusercontent.com/EKaxada/webster-words/main/dict.json'\n  //   const res = await fetch(url, {\n  //     method: 'GET'\n  //   });\n  //   return await res.json();\n  // }\n\n  const dictionary = database.map(location => location.name);\n  var myTrie = new Trie();\n\n  (async () => {\n    // const dictionary = await getWords();\n    const words = dictionary.words;\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      myTrie.insert(word);\n    }\n  })();\n\n  const onChange = e => {\n    var value = e.target.value;\n    props.setText(value);\n    setPrefix(value);\n    var words = value.split(\" \");\n    var trie_prefix = words[words.length - 1].toLowerCase();\n    var found_words = myTrie.find(trie_prefix).sort((a, b) => {\n      return a.length - b.length;\n    });\n    var first_word = found_words[0];\n\n    if (found_words.length !== 0 && value !== \"\" && value[value.length - 1] !== \" \") {\n      if (first_word != null) {\n        var remainder = first_word.slice(trie_prefix.length);\n        setSuggestion(value + remainder);\n      }\n    } else {\n      setSuggestion(value);\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 39) {\n      setPrefix(suggestion);\n      props.setText(suggestion);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search-bar\",\n      id: \"search-bar\",\n      placeholder: \"Search...\",\n      value: prefix,\n      onChange: onChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search-bar\",\n      id: \"search-bar2\",\n      value: suggestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"F4O5XQpIzZQE6OVCyyGWXTDz6ec=\");\n\n_c = SearchBar;\nexport default AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/Searchbar/searchbar.js"],"names":["useState","Trie","AddLocationForm","database","presentInDatabase","SearchBar","props","prefix","setPrefix","suggestion","setSuggestion","dictionary","map","location","name","myTrie","words","i","length","word","insert","onChange","e","value","target","setText","split","trie_prefix","toLowerCase","found_words","find","sort","a","b","first_word","remainder","slice","handleKeyDown","keyCode"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Trie from \"./trie.js\";\nimport { AddLocationForm } from \"../addLocationForm.js\";\nimport { database, presentInDatabase } from '../mockBackend/database';\n\nexport function SearchBar(props) {\n  const [prefix, setPrefix] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\");\n\n  // const getWords = async() => {\n  //   const url = 'https://raw.githubusercontent.com/EKaxada/webster-words/main/dict.json'\n  //   const res = await fetch(url, {\n  //     method: 'GET'\n  //   });\n  //   return await res.json();\n  // }\n\n  const dictionary = database.map((location) => location.name);\n\n  var myTrie = new Trie();\n\n  (async()=>{\n    // const dictionary = await getWords();\n    const words = dictionary.words;\n    for (let i = 0; i < words.length; i++) {\n        const word = words[i];\n        myTrie.insert(word)\n    }\n  })();\n\n  const onChange = (e) => {\n    var value = e.target.value;\n    props.setText(value);\n    setPrefix(value);\n    var words = value.split(\" \");\n    var trie_prefix = words[words.length - 1].toLowerCase();\n    var found_words = myTrie.find(trie_prefix).sort((a, b) => {\n      return a.length - b.length;\n    });\n    var first_word = found_words[0];\n    if (\n      found_words.length !== 0 &&\n      value !== \"\" &&\n      value[value.length - 1] !== \" \"\n    ) {\n      if (first_word != null) {\n        var remainder = first_word.slice(trie_prefix.length);\n        setSuggestion(value + remainder);\n      }\n    } else {\n      setSuggestion(value);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 39) {\n      setPrefix(suggestion);\n      props.setText(suggestion);\n    } \n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar\"\n        placeholder=\"Search...\"\n        value={prefix}\n        onChange={onChange}\n        onKeyDown={handleKeyDown}\n      />\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar2\"\n        value={suggestion}\n      />\n    </div>\n  );\n}\n\nexport default AddLocationForm;"]},"metadata":{},"sourceType":"module"}