{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/Searchbar/searchbar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Trie from \"./trie.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dictionary = {\n  words: ['hello', 'helium', 'world', 'car', 'carpet', 'test', 'this', 'that', 'those', 'working', 'is']\n};\n\nfunction SearchBar() {\n  _s();\n\n  const [prefix, setPrefix] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\"); // const getWords = async() => {\n  //   const url = 'https://raw.githubusercontent.com/EKaxada/webster-words/main/dict.json'\n  //   const res = await fetch(url, {\n  //     method: 'GET'\n  //   });\n  //   return await res.json();\n  // }\n\n  var myTrie = new Trie();\n\n  (async () => {\n    // const dictionary = await getWords();\n    const words = dictionary.words;\n\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      myTrie.insert(word);\n    }\n  })();\n\n  const onChange = e => {\n    var value = e.target.value;\n    setPrefix(value);\n    var words = value.split(\" \");\n    var trie_prefix = words[words.length - 1].toLowerCase();\n    var found_words = myTrie.find(trie_prefix).sort((a, b) => {\n      return a.length - b.length;\n    });\n    var first_word = found_words[0];\n\n    if (found_words.length !== 0 && value !== \"\" && value[value.length - 1] !== \" \") {\n      if (first_word != null) {\n        var remainder = first_word.slice(trie_prefix.length);\n        setSuggestion(value + remainder);\n      }\n    } else {\n      setSuggestion(value);\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 39) {\n      setPrefix(suggestion);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search-bar\",\n      id: \"search-bar\",\n      placeholder: \"Search...\",\n      value: prefix,\n      onChange: onChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search-bar\",\n      id: \"search-bar2\",\n      value: suggestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"F4O5XQpIzZQE6OVCyyGWXTDz6ec=\");\n\n_c = SearchBar;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/Searchbar/searchbar.js"],"names":["useState","Trie","dictionary","words","SearchBar","prefix","setPrefix","suggestion","setSuggestion","myTrie","i","length","word","insert","onChange","e","value","target","split","trie_prefix","toLowerCase","found_words","find","sort","a","b","first_word","remainder","slice","handleKeyDown","keyCode","App"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Trie from \"./trie.js\";\nimport \"./App.css\";\n\nconst dictionary = {\n  words: ['hello','helium','world','car','carpet','test','this','that','those','working','is']\n}\n\nfunction SearchBar() {\n  const [prefix, setPrefix] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\");\n\n  // const getWords = async() => {\n  //   const url = 'https://raw.githubusercontent.com/EKaxada/webster-words/main/dict.json'\n  //   const res = await fetch(url, {\n  //     method: 'GET'\n  //   });\n  //   return await res.json();\n  // }\n\n  var myTrie = new Trie();\n\n  (async()=>{\n    // const dictionary = await getWords();\n    const words = dictionary.words;\n    for (let i = 0; i < words.length; i++) {\n        const word = words[i];\n        myTrie.insert(word)\n    }\n  })();\n\n  const onChange = (e) => {\n    var value = e.target.value;\n    setPrefix(value);\n    var words = value.split(\" \");\n    var trie_prefix = words[words.length - 1].toLowerCase();\n    var found_words = myTrie.find(trie_prefix).sort((a, b) => {\n      return a.length - b.length;\n    });\n    var first_word = found_words[0];\n    if (\n      found_words.length !== 0 &&\n      value !== \"\" &&\n      value[value.length - 1] !== \" \"\n    ) {\n      if (first_word != null) {\n        var remainder = first_word.slice(trie_prefix.length);\n        setSuggestion(value + remainder);\n      }\n    } else {\n      setSuggestion(value);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 39) {\n      setPrefix(suggestion);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar\"\n        placeholder=\"Search...\"\n        value={prefix}\n        onChange={onChange}\n        onKeyDown={handleKeyDown}\n      />\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar2\"\n        value={suggestion}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}