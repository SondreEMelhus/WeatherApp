{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { database } from './mockBackend/database';\nimport { Searchbar } from './searchbar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [id, setId] = useState(0);\n  const data = database;\n\n  const presentInDatabase = locationName => {\n    const present = data.find(location => location.name === locationName);\n    return present;\n  }; //Method used to generate a new id\n\n\n  const generateId = () => {\n    setId(prev => prev + 1);\n  };\n\n  const handleSubmit = event => {\n    if (text.length > 0) {\n      if (presentInDatabase(text)) {\n        if (!props.checkIfPresent(text)) {\n          const locationToAdd = data.find(locations => locations.name === text);\n          const location = {\n            id: id,\n            name: text,\n            date: locationToAdd.date,\n            weather: locationToAdd.weather,\n            temp: locationToAdd.temp,\n            wind: locationToAdd.wind\n          };\n          generateId();\n          props.addLocation(location);\n          setText('');\n        } else {\n          setText('');\n          setErrorMessage('This location has already been added. Please try another location.');\n        }\n      } else {\n        setText('');\n        setErrorMessage('The provided dataset does not contain this location. Please try another location.');\n      }\n    } else {\n      setText('');\n      setErrorMessage('Please enter a valid location name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"inputClass\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      children: \"Enter the name of location to see its weather forecast.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      style: {\n        paddingBottom: 10\n      },\n      children: \"The current implementation is case-sensitive. Press down arrow to submit the name.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      handleSubmit: handleSubmit,\n      setText: setText,\n      setErrorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"X1wv2f1VonvwvU0BDmsUaO7KOj4=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","Searchbar","AddLocationForm","props","text","setText","errorMessage","setErrorMessage","id","setId","data","presentInDatabase","locationName","present","find","location","name","generateId","prev","handleSubmit","event","length","checkIfPresent","locationToAdd","locations","date","weather","temp","wind","addLocation","paddingBottom"],"mappings":"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","sourcesContent":["//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport '../App.css';\n\nimport { database } from './mockBackend/database';\nimport { Searchbar } from './searchbar.js';\n\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [id, setId] = useState(0);\n\n    const data = database;\n\n    const presentInDatabase = (locationName) => {\n        const present = data.find(location => location.name === locationName)\n        return present;\n    }\n\n    //Method used to generate a new id\n    const generateId = () => {\n        setId((prev) => prev + 1)\n    }\n\n\n    const handleSubmit = (event) => {\n        \n        if(text.length > 0) {\n            if (presentInDatabase(text)) {\n                if (!props.checkIfPresent(text)) {\n                    const locationToAdd = data.find(locations => locations.name === text)\n\n                    const location = {\n                        id: id,\n                        name: text,\n                        date: locationToAdd.date,\n                        weather: locationToAdd.weather,\n                        temp: locationToAdd.temp,\n                        wind: locationToAdd.wind\n                    }\n\n                    generateId();\n                    props.addLocation(location);\n                    setText('');\n                } else {\n                    setText('');\n                    setErrorMessage('This location has already been added. Please try another location.')\n                }\n            } else {\n                setText('');\n                setErrorMessage('The provided dataset does not contain this location. Please try another location.')\n            }\n\n        } else {\n            setText('');\n            setErrorMessage('Please enter a valid location name.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className='inputClass'>\n            <p type='text'>Enter the name of location to see its weather forecast.</p>\n            <p type='text' style={{paddingBottom: 10}}>The current implementation is case-sensitive. Press down arrow to submit the name.</p>\n            <Searchbar  handleSubmit={handleSubmit} \n                        setText={setText} \n                        setErrorMessage={setErrorMessage}/>\n            <p type='text' className='errorMessage'>{errorMessage}</p>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}