{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport { database, presentInDatabase } from './mockBackend/database';\nimport { SearchBar } from './Searchbar/searchbar';\nimport Trie from './Searchbar/trie';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [prefix, setPrefix] = useState('');\n  const [suggestion, setSuggerstion] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const data = database;\n  const dictionary = data.name;\n  let myTrie = new Trie();\n\n  (async () => {\n    for (let i = 0; i < dictionary.length; i++) {\n      const location = dictionary[i];\n      myTrie.insert(location);\n    }\n  })(); //Metod used to change the text state to the live input from the user\n\n\n  const handleInputChange = event => {\n    setText(event.target.value);\n    setErrorMessage('');\n  }; //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n  //Bruk props.checkIfPresent funksjon fra locationManager\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (text.length > 0) {\n      const locationToAdd = data.find(locations => locations.name === text);\n      const location = {\n        id: props.generateId(),\n        name: text,\n        date: locationToAdd.date,\n        weather: locationToAdd.weather,\n        temp: locationToAdd.temp,\n        wind: locationToAdd.wind\n      };\n      props.addLocation(location);\n      setText('');\n    } else {\n      setText('');\n      setErrorMessage('Please enter a valid location name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      handleInputChange: handleInputChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      className: \"App-error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"hPXqFe4BKf2hlSBbRmMf9bb9lIg=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","presentInDatabase","SearchBar","Trie","AddLocationForm","props","text","setText","prefix","setPrefix","suggestion","setSuggerstion","errorMessage","setErrorMessage","data","dictionary","name","myTrie","i","length","location","insert","handleInputChange","event","target","value","handleSubmit","preventDefault","locationToAdd","find","locations","id","generateId","date","weather","temp","wind","addLocation"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,wBAA5C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,YAAP;;AAEA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMe,IAAI,GAAGd,QAAb;AACA,QAAMe,UAAU,GAAGD,IAAI,CAACE,IAAxB;AACA,MAAIC,MAAM,GAAG,IAAId,IAAJ,EAAb;;AAEA,GAAC,YAAW;AACR,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,YAAME,QAAQ,GAAGL,UAAU,CAACG,CAAD,CAA3B;AACAD,MAAAA,MAAM,CAACI,MAAP,CAAcD,QAAd;AACH;AACJ,GALD,IAZoC,CAmBpC;;;AACA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACjChB,IAAAA,OAAO,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAHD,CApBoC,CA0BpC;AACA;;;AACA,QAAMa,YAAY,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAGrB,IAAI,CAACa,MAAL,GAAc,CAAjB,EAAoB;AAChB,YAAMS,aAAa,GAAGd,IAAI,CAACe,IAAL,CAAUC,SAAS,IAAIA,SAAS,CAACd,IAAV,KAAmBV,IAA1C,CAAtB;AAEI,YAAMc,QAAQ,GAAG;AACbW,QAAAA,EAAE,EAAE1B,KAAK,CAAC2B,UAAN,EADS;AAEbhB,QAAAA,IAAI,EAAEV,IAFO;AAGb2B,QAAAA,IAAI,EAAEL,aAAa,CAACK,IAHP;AAIbC,QAAAA,OAAO,EAAEN,aAAa,CAACM,OAJV;AAKbC,QAAAA,IAAI,EAAEP,aAAa,CAACO,IALP;AAMbC,QAAAA,IAAI,EAAER,aAAa,CAACQ;AANP,OAAjB;AASA/B,MAAAA,KAAK,CAACgC,WAAN,CAAkBjB,QAAlB;AACAb,MAAAA,OAAO,CAAC,EAAD,CAAP;AACP,KAdD,MAcO;AACHA,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAM,MAAAA,eAAe,CAAC,qCAAD,CAAf;AACH;AACJ,GArBD;;AAuBA,sBACI;AAAM,IAAA,QAAQ,EAAEa,YAAhB;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,iBAAiB,EAAEJ,iBAA9B;AAAiD,MAAA,YAAY,EAAEI;AAA/D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAA,gBAAsCd;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAzDeR,e;;KAAAA,e","sourcesContent":["//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport { database, presentInDatabase } from './mockBackend/database';\nimport { SearchBar } from './Searchbar/searchbar';\nimport Trie from './Searchbar/trie'\nimport '../App.css';\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n\n    const [prefix, setPrefix] = useState('');\n    const [suggestion, setSuggerstion] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const data = database;\n    const dictionary = data.name;\n    let myTrie = new Trie();\n    \n    (async() => {\n        for (let i = 0; i < dictionary.length; i++) {\n            const location = dictionary[i];\n            myTrie.insert(location);\n        }\n    })();\n\n    //Metod used to change the text state to the live input from the user\n    const handleInputChange = (event) => {\n        setText(event.target.value);\n        setErrorMessage('');\n    }\n\n\n    //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n    //Bruk props.checkIfPresent funksjon fra locationManager\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        if(text.length > 0) {\n            const locationToAdd = data.find(locations => locations.name === text)\n\n                const location = {\n                    id: props.generateId(),\n                    name: text,\n                    date: locationToAdd.date,\n                    weather: locationToAdd.weather,\n                    temp: locationToAdd.temp,\n                    wind: locationToAdd.wind\n                }\n\n                props.addLocation(location);\n                setText('');\n        } else {\n            setText('');\n            setErrorMessage('Please enter a valid location name.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <SearchBar handleInputChange={handleInputChange} handleSubmit={handleSubmit}/>\n            <p type='text' className='App-error'>{errorMessage}</p>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}