{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport { database, presentInDatabase } from './mockBackend/database';\nimport SearchBar from './Searchbar/searchbar';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddLocationForm(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const data = database; //Metod used to change the text state to the live input from the user\n\n  const handleInputChange = event => {\n    setText(event.target.value);\n    setErrorMessage('');\n  }; //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n  //Bruk props.checkIfPresent funksjon fra locationManager\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (text.length > 0) {\n      if (props.checkIfPresent(text) === undefined) {\n        const locationToAdd = data.find(locations => locations.name === text);\n        const location = {\n          id: props.generateId(),\n          name: text,\n          date: locationToAdd.date,\n          weather: locationToAdd.weather,\n          temp: locationToAdd.temp,\n          wind: locationToAdd.wind\n        };\n        props.addLocation(location);\n        setText('');\n      } else {\n        setText('');\n        setErrorMessage('This location has already been added to the list.');\n      }\n    } else {\n      setText('');\n      setErrorMessage('Please enter a valid location name.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: handleInputChange,\n      placeholder: \"Enter a location...\",\n      className: \"App-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      type: \"text\",\n      className: \"App-error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddLocationForm, \"2lqRiuP/DvbY98q1g/Lx7DKh1aI=\");\n\n_c = AddLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocationForm\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/addLocationForm.js"],"names":["React","useState","database","presentInDatabase","SearchBar","AddLocationForm","props","text","setText","errorMessage","setErrorMessage","data","handleInputChange","event","target","value","handleSubmit","preventDefault","length","checkIfPresent","undefined","locationToAdd","find","locations","name","location","id","generateId","date","weather","temp","wind","addLocation"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,wBAA5C;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,YAAP;;AAEA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMU,IAAI,GAAGT,QAAb,CAJoC,CAMpC;;AACA,QAAMU,iBAAiB,GAAIC,KAAD,IAAW;AACjCL,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAL,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAHD,CAPoC,CAapC;AACA;;;AACA,QAAMM,YAAY,GAAIH,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAGV,IAAI,CAACW,MAAL,GAAc,CAAjB,EAAoB;AAChB,UAAIZ,KAAK,CAACa,cAAN,CAAqBZ,IAArB,MAA+Ba,SAAnC,EAA8C;AAC1C,cAAMC,aAAa,GAAGV,IAAI,CAACW,IAAL,CAAUC,SAAS,IAAIA,SAAS,CAACC,IAAV,KAAmBjB,IAA1C,CAAtB;AAEA,cAAMkB,QAAQ,GAAG;AACbC,UAAAA,EAAE,EAAEpB,KAAK,CAACqB,UAAN,EADS;AAEbH,UAAAA,IAAI,EAAEjB,IAFO;AAGbqB,UAAAA,IAAI,EAAEP,aAAa,CAACO,IAHP;AAIbC,UAAAA,OAAO,EAAER,aAAa,CAACQ,OAJV;AAKbC,UAAAA,IAAI,EAAET,aAAa,CAACS,IALP;AAMbC,UAAAA,IAAI,EAAEV,aAAa,CAACU;AANP,SAAjB;AASAzB,QAAAA,KAAK,CAAC0B,WAAN,CAAkBP,QAAlB;AACAjB,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH,OAdD,MAcQ;AACJA,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,eAAe,CAAC,mDAAD,CAAf;AACH;AACJ,KAnBD,MAmBO;AACHF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,eAAe,CAAC,qCAAD,CAAf;AACH;AACJ,GA1BD;;AA4BA,sBACI;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,MAAb;AACQ,MAAA,KAAK,EAAET,IADf;AAEQ,MAAA,QAAQ,EAAEK,iBAFlB;AAGQ,MAAA,WAAW,EAAC,qBAHpB;AAIQ,MAAA,SAAS,EAAC;AAJlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAA,gBAAsCH;AAAtC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAtDeJ,e;;KAAAA,e","sourcesContent":["//Koden er basert p책: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport { database, presentInDatabase } from './mockBackend/database';\nimport SearchBar from './Searchbar/searchbar';\nimport '../App.css';\n\nexport function AddLocationForm (props) {\n\n    const [text, setText] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const data = database;\n\n    //Metod used to change the text state to the live input from the user\n    const handleInputChange = (event) => {\n        setText(event.target.value);\n        setErrorMessage('');\n    }\n\n\n    //TODO: Implementer en sjekk som unng책r at vi kan legge til en lokasjon to ganger.\n    //Bruk props.checkIfPresent funksjon fra locationManager\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        if(text.length > 0) {\n            if (props.checkIfPresent(text) === undefined) {\n                const locationToAdd = data.find(locations => locations.name === text)\n\n                const location = {\n                    id: props.generateId(),\n                    name: text,\n                    date: locationToAdd.date,\n                    weather: locationToAdd.weather,\n                    temp: locationToAdd.temp,\n                    wind: locationToAdd.wind\n                }\n\n                props.addLocation(location);\n                setText('');\n            } else  {\n                setText('');\n                setErrorMessage('This location has already been added to the list.')\n            }\n        } else {\n            setText('');\n            setErrorMessage('Please enter a valid location name.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input  type='text' \n                    value={text} \n                    onChange={handleInputChange} \n                    placeholder='Enter a location...' \n                    className='App-input'/>\n            <SearchBar />\n            <p type='text' className='App-error'>{errorMessage}</p>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}