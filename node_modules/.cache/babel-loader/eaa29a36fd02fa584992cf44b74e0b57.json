{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/location.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { LocationFrame } from './locationFrame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Location(props) {\n  _s();\n\n  const [location, setLocation] = useState([{\n    id: '',\n    //Used as a key to store a location in locations array\n    name: '',\n    weather: '',\n    temp: ''\n  }]);\n\n  const createLocation = dataSource => {\n    setLocation([{\n      id: generateId(),\n      name: dataSource.name,\n      weather: dataSource.weather,\n      temp: dataSource.temp\n    }]);\n  }; //Ikke en elegant løsning men enkel\n\n\n  let idCounter = 0;\n\n  const generateId = () => {\n    return idCounter = idCounter + 1;\n  };\n\n  const database = [{\n    name: 'Paradis',\n    weather: 'cloudLow',\n    temp: '15'\n  }];\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LocationFrame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Location, \"/8S+UVMVLCKsrDYENIa5LQa2mi0=\");\n\n_c = Location;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/location.js"],"names":["React","useState","useEffect","LocationFrame","Location","props","location","setLocation","id","name","weather","temp","createLocation","dataSource","generateId","idCounter","database"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAE5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAC;AACtCO,IAAAA,EAAE,EAAE,EADkC;AAC9B;AACRC,IAAAA,IAAI,EAAE,EAFgC;AAGtCC,IAAAA,OAAO,EAAE,EAH6B;AAItCC,IAAAA,IAAI,EAAE;AAJgC,GAAD,CAAD,CAAxC;;AAOA,QAAMC,cAAc,GAAIC,UAAD,IAAgB;AACnCN,IAAAA,WAAW,CAAC,CAAC;AACTC,MAAAA,EAAE,EAAEM,UAAU,EADL;AAETL,MAAAA,IAAI,EAAEI,UAAU,CAACJ,IAFR;AAGTC,MAAAA,OAAO,EAAEG,UAAU,CAACH,OAHX;AAITC,MAAAA,IAAI,EAAEE,UAAU,CAACF;AAJR,KAAD,CAAD,CAAX;AAMH,GAPD,CAT4B,CAkB5B;;;AACA,MAAII,SAAS,GAAG,CAAhB;;AACA,QAAMD,UAAU,GAAG,MAAM;AACrB,WAAOC,SAAS,GAAGA,SAAS,GAAG,CAA/B;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAG,CAAC;AACdP,IAAAA,IAAI,EAAE,SADQ;AAEdC,IAAAA,OAAO,EAAE,UAFK;AAGdC,IAAAA,IAAI,EAAE;AAHQ,GAAD,CAAjB;AAMAT,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAKA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxCeE,Q;;KAAAA,Q;AAwCf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { LocationFrame } from './locationFrame';\n\nexport function Location(props) {\n\n    const [location, setLocation] = useState([{\n        id: '', //Used as a key to store a location in locations array\n        name: '',\n        weather: '',\n        temp: ''\n    }]);\n\n    const createLocation = (dataSource) => {\n        setLocation([{\n            id: generateId(),\n            name: dataSource.name,\n            weather: dataSource.weather,\n            temp: dataSource.temp\n        }])\n    }\n\n    //Ikke en elegant løsning men enkel\n    let idCounter = 0;\n    const generateId = () => {\n        return idCounter = idCounter + 1;\n    }\n\n    const database = [{\n        name: 'Paradis',\n        weather: 'cloudLow',\n        temp: '15'\n    }]\n\n    useEffect(() => {\n        \n    })\n\n\n    return (\n        <div>\n            <LocationFrame />\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}