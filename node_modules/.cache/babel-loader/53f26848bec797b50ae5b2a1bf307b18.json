{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/Searchbar/searchbar.js\",\n    _s = $RefreshSig$();\n\n//This code has been borrowed from: https://github.com/kaxada/search-bar/blob/main/src/App.js\n//All credit goes to the original author\nimport { useState } from \"react\";\nimport Trie from \"./trie.js\";\nimport './SearchbarStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchBar(props) {\n  _s();\n\n  const [prefix, setPrefix] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\"); // const getWords = async() => {\n  //   const url = 'https://raw.githubusercontent.com/EKaxada/webster-words/main/dict.json'\n  //   const res = await fetch(url, {\n  //     method: 'GET'\n  //   });\n  //   return await res.json();\n  // }\n\n  const dictionary = props.listOfLocations;\n  var myTrie = new Trie();\n\n  (async () => {\n    // const dictionary = await getWords();\n    for (let i = 0; i < dictionary.length; i++) {\n      const location = dictionary[i];\n      myTrie.insert(location);\n    }\n  })();\n\n  const handleChange = event => {\n    let inputValue = event.target.value;\n    props.setText(inputValue);\n    setPrefix(inputValue);\n    let locations = inputValue.split(\" \");\n    let triePrefix = locations[locations.length - 1].toLowerCase();\n    let foundLocations = myTrie.find(triePrefix).sort((a, b) => {\n      return a.length - b.length;\n    });\n    let firstLocation = foundLocations[0];\n\n    if (foundLocations.length !== 0 && inputValue !== \"\" && inputValue[inputValue.length - 1] !== \" \") {\n      if (firstLocation != null) {\n        let remainder = firstLocation.slice(triePrefix.length);\n        setSuggestion(inputValue + remainder);\n      }\n    } else {\n      setSuggestion(inputValue);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'ArrowDown') {\n      setPrefix(suggestion);\n      props.setText(suggestion);\n      props.handleSubmit();\n    }\n\n    if (event.key === 'Enter') {\n      props.setText(suggestion);\n      props.handleSubmit();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-Searchbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search-bar\",\n      id: \"search-bar\",\n      placeholder: \"Search...\",\n      value: prefix,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"search-bar\",\n      id: \"search-bar2\",\n      value: suggestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"F4O5XQpIzZQE6OVCyyGWXTDz6ec=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/Searchbar/searchbar.js"],"names":["useState","Trie","SearchBar","props","prefix","setPrefix","suggestion","setSuggestion","dictionary","listOfLocations","myTrie","i","length","location","insert","handleChange","event","inputValue","target","value","setText","locations","split","triePrefix","toLowerCase","foundLocations","find","sort","a","b","firstLocation","remainder","slice","handleKeyDown","key","handleSubmit"],"mappings":"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","sourcesContent":["//This code has been borrowed from: https://github.com/kaxada/search-bar/blob/main/src/App.js\n//All credit goes to the original author\n\nimport { useState } from \"react\";\nimport Trie from \"./trie.js\";\nimport './SearchbarStyle.css';\n\nexport function SearchBar(props) {\n  const [prefix, setPrefix] = useState(\"\");\n  const [suggestion, setSuggestion] = useState(\"\");\n\n  // const getWords = async() => {\n  //   const url = 'https://raw.githubusercontent.com/EKaxada/webster-words/main/dict.json'\n  //   const res = await fetch(url, {\n  //     method: 'GET'\n  //   });\n  //   return await res.json();\n  // }\n\n  const dictionary = props.listOfLocations;\n\n  var myTrie = new Trie();\n\n  (async()=>{\n    // const dictionary = await getWords();\n    for (let i = 0; i < dictionary.length; i++) {\n        const location = dictionary[i];\n        myTrie.insert(location)\n    }\n  })();\n\n  const handleChange = (event) => {\n\n    let inputValue = event.target.value;\n    props.setText(inputValue);\n    setPrefix(inputValue);\n\n    let locations = inputValue.split(\" \");\n    let triePrefix = locations[locations.length - 1].toLowerCase();\n    let foundLocations = myTrie.find(triePrefix).sort((a, b) => {\n      return a.length - b.length;\n    });\n\n    let firstLocation = foundLocations[0];\n\n    if (\n        foundLocations.length !== 0 &&\n        inputValue !== \"\" &&\n        inputValue[inputValue.length - 1] !== \" \"\n    ) {\n      if (firstLocation != null) {\n        let remainder = firstLocation.slice(triePrefix.length);\n        setSuggestion(inputValue + remainder);\n      }\n    } else {\n      setSuggestion(inputValue);\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'ArrowDown') {\n      setPrefix(suggestion);\n      props.setText(suggestion);\n      props.handleSubmit();\n    } \n\n    if (event.key === 'Enter') {\n      props.setText(suggestion);\n      props.handleSubmit();\n    }\n  };\n\n  return (\n    <div className=\"App-Searchbar\">\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar\"\n        placeholder=\"Search...\"\n        value={prefix}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n      <input\n        type=\"text\"\n        name=\"search-bar\"\n        id=\"search-bar2\"\n        value={suggestion}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}