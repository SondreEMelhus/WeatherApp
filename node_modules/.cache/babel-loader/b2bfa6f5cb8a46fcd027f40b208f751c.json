{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/autocomplete.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AutoComplete(props) {\n  _s();\n\n  const [filteredLocations, setFilteredLocations] = useState([]);\n  const [activeLocation, setActiveLocation] = useState('');\n  const [activeLocationIndex, setActiveLocationIndex] = useState(0);\n  const [showLocations, setShowLocations] = useState(false);\n  const [input, setInput] = useState('');\n\n  const handleChange = event => {\n    const userInput = event.target.value;\n    const unLinked = props.locations.filter(location => location.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n    setInput(event.target.value);\n    setFilteredLocations(unLinked);\n    setActiveLocationIndex(0);\n    setShowLocations(true);\n  };\n\n  const onClick = event => {\n    event.preventDefault();\n    setFilteredLocations([]);\n    setInput(event.target.innerText);\n    setActiveLocationIndex(0);\n    setShowLocations(false);\n    props.addLocation(input);\n  };\n\n  const onKeyDown = event => {\n    event.preventDefault();\n\n    if (event.keyCode === 13) {\n      setInput(event.target.value);\n    }\n\n    if (event.keyCode === 38) {\n      if (activeLocationIndex === 0) {\n        setActiveLocation('');\n      } else {\n        setActiveLocationIndex(prev => {\n          return prev - 1;\n        });\n      }\n    }\n\n    if (event.keyCode === 40) {\n      if (activeLocationIndex === filteredLocations.length) {\n        return null;\n      } else {\n        setActiveLocationIndex(prev => {\n          return prev + 1;\n        });\n      }\n    }\n  };\n\n  const LocationsListComponent = () => {\n    return filteredLocations.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"locations\",\n      children: filteredLocations.map((location, index) => {\n        let className;\n\n        if (index === activeLocationIndex) {\n          className = \"location-active\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: className,\n          onClick: onClick,\n          children: location\n        }, location, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"no-locations\",\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Ingen alternativer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      onKeyDown: onKeyDown,\n      value: input,\n      placeholder: \"Enter a location...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), showLocations && input && /*#__PURE__*/_jsxDEV(LocationsListComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AutoComplete, \"ZThT4HWkCAsB2iuC8fR4VYwvOs8=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/autocomplete.js"],"names":["React","useState","AutoComplete","props","filteredLocations","setFilteredLocations","activeLocation","setActiveLocation","activeLocationIndex","setActiveLocationIndex","showLocations","setShowLocations","input","setInput","handleChange","event","userInput","target","value","unLinked","locations","filter","location","toLowerCase","indexOf","onClick","preventDefault","innerText","addLocation","onKeyDown","keyCode","prev","length","LocationsListComponent","map","index","className"],"mappings":"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","sourcesContent":["//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState } from 'react';\nimport '../App.css';\n\nexport function AutoComplete (props) {\n\n    const [filteredLocations, setFilteredLocations] = useState([]);\n    const [activeLocation, setActiveLocation] = useState('');\n    const [activeLocationIndex, setActiveLocationIndex] = useState(0);\n    const [showLocations, setShowLocations] = useState(false);\n    const [input, setInput] = useState('');\n\n\n    const handleChange = (event) => {\n        const userInput = event.target.value;\n\n        const unLinked = props.locations.filter(\n            (location) => location.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        setInput(event.target.value);\n        setFilteredLocations(unLinked);\n        setActiveLocationIndex(0);\n        setShowLocations(true);\n    }\n\n\n    const onClick = (event) => {\n        event.preventDefault();\n\n        setFilteredLocations([]);\n        setInput(event.target.innerText);\n        setActiveLocationIndex(0);\n        setShowLocations(false);\n        props.addLocation(input);\n    }\n\n\n    const onKeyDown = (event) => {\n        event.preventDefault();\n\n        if (event.keyCode === 13) {\n            setInput(event.target.value);\n        }\n        if (event.keyCode === 38) {\n            if (activeLocationIndex === 0) {\n                setActiveLocation('');\n            } else {\n                setActiveLocationIndex((prev) => {\n                    return prev - 1;\n                });\n            }\n        } \n        if (event.keyCode === 40) {\n            if (activeLocationIndex === filteredLocations.length) {\n                return null;\n            } else {\n                setActiveLocationIndex((prev) => {\n                    return prev + 1;\n                });\n            }\n        }\n    }\n\n    const LocationsListComponent = () => {\n        return filteredLocations.length ? (\n          <ul class='locations'>\n            {filteredLocations.map((location, index) => {\n              let className;\n              \n              if (index === activeLocationIndex) {\n                className = \"location-active\";\n              }\n              return (\n                <li className={className} key={location} onClick={onClick}>\n                  {location}\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <div class=\"no-locations\">\n            <em>Ingen alternativer</em>\n          </div>\n        );\n      };\n\n    return (\n        <div>\n            <input \n                type='text'\n                onChange={handleChange}\n                onKeyDown={onKeyDown}\n                value={input}\n                placeholder='Enter a location...'\n                />\n                {showLocations && input && <LocationsListComponent />}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}