{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/locationManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport weatherLogo from './resources/WeatherIcons/logo.png';\nimport '../App.css'; //Import components\n\nimport { AddLocationForm } from './addLocationForm';\nimport { LocationFrame } from './locationFrame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LocationManager() {\n  _s();\n\n  const [locations, setLocations] = useState([]); //Method used to change the state of locations and add a new location to the array\n\n  const addLocation = newLocation => {\n    setLocations(locations => [newLocation, ...locations]);\n  }; //Method used to change the state of locations and remove a given location from the array based on id\n\n\n  const removeLocation = locationNameToRemove => {\n    const newListOfLoactions = locations.filter(location => location.name !== locationNameToRemove);\n    setLocations(newListOfLoactions);\n  }; //Method used to check if a location name has already been added to the list of locations\n\n\n  const checkIfPresent = locationName => {\n    const present = locations.find(location => location.name === locationName);\n    return present;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: weatherLogo,\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Forecaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(AddLocationForm, {\n        addLocation: addLocation,\n        checkIfPresent: checkIfPresent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), locations.map(location => {\n        return /*#__PURE__*/_jsxDEV(LocationFrame, {\n          location: location,\n          removeLocation: removeLocation\n        }, location.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LocationManager, \"u01Kl9UNqUTJS7ATTYHa/qObN40=\");\n\n_c = LocationManager;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationManager\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/locationManager.js"],"names":["React","useState","weatherLogo","AddLocationForm","LocationFrame","LocationManager","locations","setLocations","addLocation","newLocation","removeLocation","locationNameToRemove","newListOfLoactions","filter","location","name","checkIfPresent","locationName","present","find","paddingBottom","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAO,YAAP,C,CAEA;;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,OAAO,SAASC,eAAT,GAA2B;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CAF8B,CAK9B;;AACA,QAAMO,WAAW,GAAIC,WAAD,IAAiB;AACjCF,IAAAA,YAAY,CAAED,SAAD,IAAe,CAACG,WAAD,EAAc,GAAGH,SAAjB,CAAhB,CAAZ;AACH,GAFD,CAN8B,CAW9B;;;AACA,QAAMI,cAAc,GAAIC,oBAAD,IAA0B;AAC7C,UAAMC,kBAAkB,GAAGN,SAAS,CAACO,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkBJ,oBAA/C,CAA3B;AACAJ,IAAAA,YAAY,CAACK,kBAAD,CAAZ;AACH,GAHD,CAZ8B,CAkB9B;;;AACA,QAAMI,cAAc,GAAIC,YAAD,IAAkB;AACrC,UAAMC,OAAO,GAAGZ,SAAS,CAACa,IAAV,CAAeL,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkBE,YAA7C,CAAhB;AACA,WAAOC,OAAP;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEhB,WAAV;AAAuB,QAAA,GAAG,EAAC,MAA3B;AAAkC,QAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,aAAa,EAAE;AAAhB,OAAZ;AAAA,8BACI,QAAC,eAAD;AAAoB,QAAA,WAAW,EAAEZ,WAAjC;AACoB,QAAA,cAAc,EAAEQ;AADpC;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKV,SAAS,CAACe,GAAV,CAAeP,QAAD,IAAc;AACzB,4BACI,QAAC,aAAD;AACgB,UAAA,QAAQ,EAAEA,QAD1B;AAEgB,UAAA,cAAc,EAAEJ;AAFhC,WAAqBI,QAAQ,CAACC,IAA9B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH,OAPA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA9CeV,e;;KAAAA,e;AA8Cf","sourcesContent":["import React, {useState} from 'react';\nimport weatherLogo from './resources/WeatherIcons/logo.png';\nimport '../App.css';\n\n//Import components\nimport { AddLocationForm } from './addLocationForm';\nimport { LocationFrame } from './locationFrame';\n\nexport function LocationManager() {\n\n    const [locations, setLocations] = useState([]);\n\n\n    //Method used to change the state of locations and add a new location to the array\n    const addLocation = (newLocation) => {\n        setLocations((locations) => [newLocation, ...locations]);\n    };\n\n\n    //Method used to change the state of locations and remove a given location from the array based on id\n    const removeLocation = (locationNameToRemove) => {\n        const newListOfLoactions = locations.filter(location => location.name !== locationNameToRemove);\n        setLocations(newListOfLoactions);\n    };\n\n\n    //Method used to check if a location name has already been added to the list of locations\n    const checkIfPresent = (locationName) => {\n        const present = locations.find(location => location.name === locationName)\n        return present;\n    }\n\n    return (\n        <div>\n            <div>\n                <img src={weatherLogo} alt=\"logo\" className='logo' />\n                <br/>\n                <h1 className='title'>Forecaster</h1>\n                <br/>\n            </div>\n            <div style={{paddingBottom: 50}}>\n                <AddLocationForm    addLocation={addLocation} \n                                    checkIfPresent={checkIfPresent} />\n                {locations.map((location) => {\n                    return (\n                        <LocationFrame  key={location.name}\n                                        location={location}\n                                        removeLocation={removeLocation}\n                                    />\n                    )\n                })}\n            </div>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}