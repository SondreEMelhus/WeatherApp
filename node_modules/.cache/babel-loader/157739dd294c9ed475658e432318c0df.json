{"ast":null,"code":"var _jsxFileName = \"/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/autocomplete.js\",\n    _s = $RefreshSig$();\n\n//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AutoComplete(props) {\n  _s();\n\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [activeSuggestion, setActiveSuggestion] = useState('');\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [input, setInput] = useState('');\n\n  const handleChange = event => {\n    const userInput = event.target.value;\n    const unLinked = props.locations.filter(location => location.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n    setInput(event.target.value);\n    setFilteredSuggestions(unLinked);\n    setActiveSuggestionIndex(0);\n    setShowSuggestions(true);\n  };\n\n  const onClick = event => {\n    event.preventDefault();\n    setFilteredSuggestions([]);\n    setInput(event.target.innerText);\n    setActiveSuggestionIndex(0);\n    setShowSuggestions(false);\n  };\n\n  const onKeyDown = event => {\n    event.preventDefault();\n\n    if (event.keyCode === 13) {\n      setInput(event.target.value);\n    }\n\n    if (event.keyCode === 38) {\n      if (activeSuggestionIndex === 0) {\n        setActiveSuggestion('');\n      } else {\n        setActiveSuggestionIndex(prev => {\n          return prev - 1;\n        });\n      }\n    }\n\n    if (event.keyCode == 40) {\n      if (activeSuggestionIndex === filteredSuggestions.length) {\n        return null;\n      } else {\n        setActiveSuggestionIndex(prev => {\n          return prev + 1;\n        });\n      }\n    }\n  };\n\n  const SuggestionsListComponent = () => {\n    return filteredSuggestions.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"suggestions\",\n      children: filteredSuggestions.map((suggestion, index) => {\n        let className;\n\n        if (index === activeSuggestionIndex) {\n          className = \"suggestion-active\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: className,\n          onClick: onClick,\n          children: suggestion\n        }, suggestion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"no-suggestions\",\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Ingen alternativer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      onKeyDown: onKeyDown,\n      value: input,\n      placeholder: \"Enter a location...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), showSuggestions && input && /*#__PURE__*/_jsxDEV(SuggestionsListComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AutoComplete, \"Z/15ajaZpbnQUpTeUdTBUTe/7o4=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"sources":["/Users/sondremelhus/DEV/ReactApps/weatherapp/src/componentes/autocomplete.js"],"names":["React","useState","useEffect","AutoComplete","props","filteredSuggestions","setFilteredSuggestions","activeSuggestion","setActiveSuggestion","activeSuggestionIndex","setActiveSuggestionIndex","showSuggestions","setShowSuggestions","input","setInput","handleChange","event","userInput","target","value","unLinked","locations","filter","location","toLowerCase","indexOf","onClick","preventDefault","innerText","onKeyDown","keyCode","prev","length","SuggestionsListComponent","map","suggestion","index","className"],"mappings":"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","sourcesContent":["//Koden er basert på: https://blog.logrocket.com/build-react-autocomplete-component/\n\nimport React, { useState, useEffect } from 'react';\n\nexport function AutoComplete (props) {\n\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n    const [activeSuggestion, setActiveSuggestion] = useState('');\n    const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [input, setInput] = useState('');\n\n\n    const handleChange = (event) => {\n        const userInput = event.target.value;\n\n        const unLinked = props.locations.filter(\n            (location) => location.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        setInput(event.target.value);\n        setFilteredSuggestions(unLinked);\n        setActiveSuggestionIndex(0);\n        setShowSuggestions(true);\n    }\n\n\n    const onClick = (event) => {\n        event.preventDefault();\n\n        setFilteredSuggestions([]);\n        setInput(event.target.innerText);\n        setActiveSuggestionIndex(0);\n        setShowSuggestions(false);\n    }\n\n\n    const onKeyDown = (event) => {\n        event.preventDefault();\n\n        if (event.keyCode === 13) {\n            setInput(event.target.value);\n        }\n        if (event.keyCode === 38) {\n            if (activeSuggestionIndex === 0) {\n                setActiveSuggestion('');\n            } else {\n                setActiveSuggestionIndex((prev) => {\n                    return prev - 1;\n                });\n            }\n        } \n        if (event.keyCode == 40) {\n            if (activeSuggestionIndex === filteredSuggestions.length) {\n                return null;\n            } else {\n                setActiveSuggestionIndex((prev) => {\n                    return prev + 1;\n                });\n            }\n        }\n    }\n\n    const SuggestionsListComponent = () => {\n        return filteredSuggestions.length ? (\n          <ul class='suggestions'>\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n              \n              if (index === activeSuggestionIndex) {\n                className = \"suggestion-active\";\n              }\n              return (\n                <li className={className} key={suggestion} onClick={onClick}>\n                  {suggestion}\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <div class=\"no-suggestions\">\n            <em>Ingen alternativer</em>\n          </div>\n        );\n      };\n\n    return (\n        <div>\n            <input \n                type='text'\n                onChange={handleChange}\n                onKeyDown={onKeyDown}\n                value={input}\n                placeholder='Enter a location...'\n                />\n                {showSuggestions && input && <SuggestionsListComponent />}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}